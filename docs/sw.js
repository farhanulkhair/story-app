(()=>{"use strict";var e={136:()=>{try{self["workbox:core:7.2.0"]&&_()}catch(e){}},227:()=>{try{self["workbox:routing:7.2.0"]&&_()}catch(e){}},390:()=>{try{self["workbox:strategies:7.2.0"]&&_()}catch(e){}},447:()=>{try{self["workbox:precaching:7.2.0"]&&_()}catch(e){}},535:()=>{try{self["workbox:cacheable-response:7.2.0"]&&_()}catch(e){}},626:()=>{try{self["workbox:expiration:7.2.0"]&&_()}catch(e){}}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,s),i.exports}s(136);const n=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class a extends Error{constructor(e,t){super(n(e,t)),this.name=e,this.details=t}}const i={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},r=e=>[i.prefix,e,i.suffix].filter((e=>e&&e.length>0)).join("-"),o=e=>e||r(i.precache),c=e=>e||r(i.runtime);function h(e,t){const s=t();return e.waitUntil(s),s}s(447);function l(e){if(!e)throw new a("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new a("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(s,location.href),i=new URL(s,location.href);return n.searchParams.set("__WB_REVISION__",t),{cacheKey:n.href,url:i.href}}class u{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class d{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let f;async function p(e,t){let s=null;if(e.url){s=new URL(e.url).origin}if(s!==self.location.origin)throw new a("cross-origin-copy-response",{origin:s});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=t?t(i):i,o=function(){if(void 0===f){const e=new Response("");if("body"in e)try{new Response(e.body),f=!0}catch(e){f=!1}f=!1}return f}()?n.body:await n.blob();return new Response(o,r)}const g=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");function w(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class m{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const y=new Set;function v(e){return new Promise((t=>setTimeout(t,e)))}s(390);function b(e){return"string"==typeof e?new Request(e):e}class R{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new m,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=b(e);if("navigate"===s.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))s=await e({request:s.clone(),event:t})}catch(e){if(e instanceof Error)throw new a("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=s.clone();try{let e;e=await fetch(s,"navigate"===s.mode?void 0:this._strategy.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))e=await s({event:t,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=b(e);let s;const{cacheName:n,matchOptions:a}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:n,matchOptions:a,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,t){const s=b(e);await v(0);const n=await this.getCacheKey(s,"write");if(!t)throw new a("cache-put-with-no-response",{url:g(n.url)});const i=await this._ensureResponseSafeToCache(t);if(!i)return!1;const{cacheName:r,matchOptions:o}=this._strategy,c=await self.caches.open(r),h=this.hasCallback("cacheDidUpdate"),l=h?await async function(e,t,s,n){const a=w(t.url,s);if(t.url===a)return e.match(t,n);const i=Object.assign(Object.assign({},n),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(a===w(t.url,s))return e.match(t,n)}(c,n.clone(),["__WB_REVISION__"],o):null;try{await c.put(n,h?i.clone():i)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of y)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:r,oldResponse:l,newResponse:i.clone(),request:n,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=b(await e({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return t[e](a)};yield n}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class x{constructor(e={}){this.cacheName=c(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new R(this,{event:t,request:s,params:n}),i=this._getResponse(a,s,t);return[i,this._awaitComplete(i,a,s,t)]}async _getResponse(e,t,s){let n;await e.runCallbacks("handlerWillStart",{event:s,request:t});try{if(n=await this._handle(t,e),!n||"error"===n.type)throw new a("no-response",{url:t.url})}catch(a){if(a instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:a,event:s,request:t}),n)break;if(!n)throw a}for(const a of e.iterateCallbacks("handlerWillRespond"))n=await a({event:s,request:t,response:n});return n}async _awaitComplete(e,t,s,n){let a,i;try{a=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:i}),t.destroy(),i)throw i}}class C extends x{constructor(e={}){e.cacheName=o(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(C.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const n=t.params||{};if(!this._fallbackToNetwork)throw new a("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const a=n.integrity,i=e.integrity,r=!i||i===a;if(s=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?i||a:void 0})),a&&r&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await t.cachePut(e,s.clone());0}}return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new a("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==C.copyRedirectedCacheableResponsesPlugin&&(n===C.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);0===t?this.plugins.push(C.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}C.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},C.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await p(e):e};class E{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new C({cacheName:o(e),plugins:[...t,new d({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){"string"==typeof s?t.push(s):s&&void 0===s.revision&&t.push(s.url);const{cacheKey:e,url:n}=l(s),i="string"!=typeof s&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new a("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==s.integrity)throw new a("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,s.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),t.length>0){t.join(", ");1}}}install(e){return h(e,(async()=>{const t=new u;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const n=this._cacheKeysToIntegrities.get(s),a=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:n,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(e){return h(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new a("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let U;const L=()=>(U||(U=new E),U);s(227);const N=e=>e&&"object"==typeof e?e:{handle:e};class q{constructor(e,t,s="GET"){this.handler=N(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=N(e)}}class A extends q{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class S{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;0;const s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return void 0;const n=s.origin===location.origin,{params:a,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let r=i&&i.handler;const o=e.method;if(!r&&this._defaultHandlerMap.has(o)&&(r=this._defaultHandlerMap.get(o)),!r)return void 0;let c;try{c=r.handle({url:s,request:e,event:t,params:a})}catch(e){c=Promise.reject(e)}const h=i&&i.catchHandler;return c instanceof Promise&&(this._catchHandler||h)&&(c=c.catch((async n=>{if(h){0;try{return await h.handle({url:s,request:e,event:t,params:a})}catch(e){e instanceof Error&&(n=e)}}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw n}))),c}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const a=this._routes.get(s.method)||[];for(const i of a){let a;const r=i.match({url:e,sameOrigin:t,request:s,event:n});if(r)return a=r,(Array.isArray(a)&&0===a.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(a=void 0),{route:i,params:a}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,N(e))}setCatchHandler(e){this._catchHandler=N(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new a("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new a("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let T;const D=()=>(T||(T=new S,T.addFetchListener(),T.addCacheListener()),T);function k(e,t,s){let n;if("string"==typeof e){const a=new URL(e,location.href);0;n=new q((({url:e})=>e.href===a.href),t,s)}else if(e instanceof RegExp)n=new A(e,t,s);else if("function"==typeof e)n=new q(e,t,s);else{if(!(e instanceof q))throw new a("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=e}return D().registerRoute(n),n}class I extends q{constructor(e,t){super((({request:s})=>{const n=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:a}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(i,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(n){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:i});for(const t of e)yield t.href}}(s.url,t)){const t=n.get(a);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}}),e.strategy)}}class P extends x{async _handle(e,t){let s,n=await t.cacheMatch(e);if(n)0;else{0;try{n=await t.fetchAndCachePut(e)}catch(e){e instanceof Error&&(s=e)}0}if(!n)throw new a("no-response",{url:e.url,error:s});return n}}const M={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class K extends x{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(M),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){const s=[];const n=[];let i;if(this._networkTimeoutSeconds){const{id:a,promise:r}=this._getTimeoutPromise({request:e,logs:s,handler:t});i=a,n.push(r)}const r=this._getNetworkPromise({timeoutId:i,request:e,logs:s,handler:t});n.push(r);const o=await t.waitUntil((async()=>await t.waitUntil(Promise.race(n))||await r)());if(!o)throw new a("no-response",{url:e.url});return o}_getTimeoutPromise({request:e,logs:t,handler:s}){let n;return{promise:new Promise((t=>{n=setTimeout((async()=>{t(await s.cacheMatch(e))}),1e3*this._networkTimeoutSeconds)})),id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,handler:n}){let a,i;try{i=await n.fetchAndCachePut(t)}catch(e){e instanceof Error&&(a=e)}return e&&clearTimeout(e),!a&&i||(i=await n.cacheMatch(t)),i}}class O extends x{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(M)}async _handle(e,t){const s=t.fetchAndCachePut(e).catch((()=>{}));t.waitUntil(s);let n,i=await t.cacheMatch(e);if(i)0;else{0;try{i=await s}catch(e){e instanceof Error&&(n=e)}}if(!i)throw new a("no-response",{url:e.url,error:n});return i}}s(535);class B{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some((t=>e.headers.get(t)===this._headers[t]))),t}}class W{constructor(e){this.cacheWillUpdate=async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null,this._cacheableResponse=new B(e)}}function H(e){e.then((()=>{}))}let j,F;const G=new WeakMap,V=new WeakMap,$=new WeakMap,J=new WeakMap,Q=new WeakMap;let Y={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return V.get(e);if("objectStoreNames"===t)return e.objectStoreNames||$.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return Z(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function z(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(F||(F=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(ee(this),t),Z(G.get(this))}:function(...t){return Z(e.apply(ee(this),t))}:function(t,...s){const n=e.call(ee(this),t,...s);return $.set(n,t.sort?t.sort():[t]),Z(n)}}function X(e){return"function"==typeof e?z(e):(e instanceof IDBTransaction&&function(e){if(V.has(e))return;const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",i),e.removeEventListener("abort",i)},a=()=>{t(),n()},i=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",i),e.addEventListener("abort",i)}));V.set(e,t)}(e),t=e,(j||(j=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((e=>t instanceof e))?new Proxy(e,Y):e);var t}function Z(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",i)},a=()=>{t(Z(e.result)),n()},i=()=>{s(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",i)}));return t.then((t=>{t instanceof IDBCursor&&G.set(t,e)})).catch((()=>{})),Q.set(t,e),t}(e);if(J.has(e))return J.get(e);const t=X(e);return t!==e&&(J.set(e,t),Q.set(t,e)),t}const ee=e=>Q.get(e);const te=["get","getKey","getAll","getAllKeys","count"],se=["put","add","delete","clear"],ne=new Map;function ae(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(ne.get(t))return ne.get(t);const s=t.replace(/FromIndex$/,""),n=t!==s,a=se.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!te.includes(s))return;const i=async function(e,...t){const i=this.transaction(e,a?"readwrite":"readonly");let r=i.store;return n&&(r=r.index(t.shift())),(await Promise.all([r[s](...t),a&&i.done]))[0]};return ne.set(t,i),i}Y=(e=>({...e,get:(t,s,n)=>ae(t,s)||e.get(t,s,n),has:(t,s)=>!!ae(t,s)||e.has(t,s)}))(Y);s(626);const ie="cache-entries",re=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class oe{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(ie,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){const s=indexedDB.deleteDatabase(e);t&&s.addEventListener("blocked",(e=>t(e.oldVersion,e))),Z(s).then((()=>{}))}(this._cacheName)}async setTimestamp(e,t){const s={url:e=re(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},n=(await this.getDb()).transaction(ie,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(e){const t=await this.getDb(),s=await t.get(ie,this._getId(e));return null==s?void 0:s.timestamp}async expireEntries(e,t){const s=await this.getDb();let n=await s.transaction(ie).store.index("timestamp").openCursor(null,"prev");const a=[];let i=0;for(;n;){const s=n.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&i>=t?a.push(n.value):i++),n=await n.continue()}const r=[];for(const e of a)await s.delete(ie,e.id),r.push(e.url);return r}_getId(e){return this._cacheName+"|"+re(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:s,upgrade:n,blocking:a,terminated:i}={}){const r=indexedDB.open(e,t),o=Z(r);return n&&r.addEventListener("upgradeneeded",(e=>{n(Z(r.result),e.oldVersion,e.newVersion,Z(r.transaction),e)})),s&&r.addEventListener("blocked",(e=>s(e.oldVersion,e.newVersion,e))),o.then((e=>{i&&e.addEventListener("close",(()=>i())),a&&e.addEventListener("versionchange",(e=>a(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class ce{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new oe(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const e of t)await s.delete(e,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,H(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class he{constructor(e={}){this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const a=this._isResponseDateFresh(n),i=this._getCacheExpiration(s);H(i.expireEntries());const r=i.updateTimestamp(t.url);if(e)try{e.waitUntil(r)}catch(e){0}return a?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&function(e){y.add(e)}((()=>this.deleteCacheAndMetadata()))}_getCacheExpiration(e){if(e===c())throw new a("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new ce(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(null===t)return!0;return t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}const le={BASE_URL:"https://story-api.dicoding.dev/v1",DEFAULT_LANGUAGE:"id",CACHE_NAME:"StoryApp-v1",DATABASE_NAME:"story-app-db",DATABASE_VERSION:1,OBJECT_STORE_NAME:"stories",PUSH_MSG_VAPID_PUBLIC_KEY:"BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk",PUSH_MSG_SUBSCRIBE_URL:"/notifications/subscribe",PUSH_MSG_UNSUBSCRIBE_URL:"/notifications/subscribe",WS_URL:"wss://story-api.dicoding.dev",ENDPOINTS:{REGISTER:"/register",LOGIN:"/login",STORIES:"/stories",GUEST_STORY:"/stories/guest"}};var ue;(function(e){L().precache(e)})([{'revision':'9984ef2ee7cd3109d90e0e777cf93fbe','url':'app.webmanifest'},{'revision':'14a70b47a224fb0e0740724429591285','url':'app~17200145.bundle.js'},{'revision':'d27861d6fc6c7edfffb0e7cfde1d615f','url':'app~545fd537.bundle.js'},{'revision':'d35e6a28ca664f3c3cb56b6d9761304d','url':'app~67f37792.bundle.js'},{'revision':'9484555442e59d61e2fbee4a6be8ee2b','url':'app~84781932.bundle.js'},{'revision':'418a9c2ca086dcc8ad00aebe207df4ad','url':'app~961548f3.bundle.js'},{'revision':'b91f7c975fcdb2509e3cc7a8115ddf5e','url':'app~cd3424b5.bundle.js'},{'revision':'8723f33e4e87c6ec41a6b45ae11659cb','url':'app~ce4d5ebf.bundle.js'},{'revision':'649c4be8801621a6ca461898bdc44039','url':'app~f6563343.bundle.js'},{'revision':'21a0a0a9b1fdb78eae4c9d97f7e90078','url':'favicon.png'},{'revision':'731b0604e0c3b1724fda4a1f49a881ac','url':'index.html'},{'revision':'60c553d10c9e050460ef7a2bb275b7b5','url':'manifest.json'},{'revision':'899faf33c03e9f67c1c3a062d9163240','url':'runtime.bundle.js'},{'revision':null,'url':'styles/app~f6563343.c8353cf91bc8a2bef0eb.css'},{'revision':null,'url':'vendors/102.a2e65ba77fd6f4fba97c.js'},{'revision':null,'url':'vendors/481.8d003c47e37bec3de4ae.js'}]),function(e){const t=L();k(new I(t,e))}(ue),k((function(e){return"https://fonts.googleapis.com"===e.url.origin}),new O({cacheName:"google-fonts-stylesheets"})),k((function(e){return"https://fonts.gstatic.com"===e.url.origin}),new P({cacheName:"google-fonts-webfonts",plugins:[new W({statuses:[0,200]}),new he({maxAgeSeconds:31536e3,maxEntries:30})]})),k((function(e){var t=e.request;return"script"===t.destination||"style"===t.destination}),new O({cacheName:"static-resources"})),k((function(e){return"image"===e.request.destination}),new P({cacheName:"images",plugins:[new W({statuses:[0,200]}),new he({maxEntries:60,maxAgeSeconds:2592e3})]})),k((function(e){return"https://story-api.dicoding.dev"===e.url.origin}),new K({cacheName:"api-responses",plugins:[new W({statuses:[0,200]}),new he({maxEntries:100,maxAgeSeconds:2592e3})]})),k((function(e){return"navigate"===e.request.mode}),new K({cacheName:"pages",plugins:[new W({statuses:[200]})]})),self.addEventListener("push",(function(e){var t;try{t=e.data?JSON.parse(e.data.text()):{title:"Story App Notification",options:{body:"Ada story baru untuk Anda!",icon:"/favicon.png",badge:"/favicon.png",vibrate:[100,50,100],data:{dateOfArrival:Date.now(),primaryKey:1,url:self.location.origin}}}}catch(s){t={title:"Story App Notification",options:{body:e.data?e.data.text():"Ada pembaruan baru!"}}}e.waitUntil(self.registration.showNotification(t.title,t.options).then((function(){})).catch((function(e){})))})),self.addEventListener("notificationclick",(function(e){var t;e.notification.close();var s=new URL((null===(t=e.notification.data)||void 0===t?void 0:t.url)||"/",self.location.origin).href;e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((function(e){var t=e.find((function(e){return e.url===s}));return t?t.focus():clients.openWindow(s)})).then((function(){})).catch((function(e){})))})),self.addEventListener("install",(function(e){self.skipWaiting(),e.waitUntil(caches.open(le.CACHE_NAME).then((function(e){return e.addAll(["./","./index.html","./app.webmanifest","./favicon.png","./icons/icon-72x72.png","./icons/icon-96x96.png","./icons/icon-128x128.png","./icons/icon-144x144.png","./icons/icon-152x152.png","./icons/icon-192x192.png","./icons/icon-384x384.png","./icons/icon-512x512.png"])})))})),self.addEventListener("activate",(function(e){e.waitUntil(Promise.all([self.clients.claim(),caches.keys().then((function(e){return Promise.all(e.filter((function(e){return e.startsWith("StoryApp-")})).filter((function(e){return e!==le.CACHE_NAME})).map((function(e){return caches.delete(e)})))}))]))}))})();
//# sourceMappingURL=sw.js.map